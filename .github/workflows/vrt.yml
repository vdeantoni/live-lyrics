name: Visual Regression Tests

on: [pull_request]

jobs:
  lost-pixel:
    runs-on: ubuntu-latest
    name: Lost Pixel

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build client
        run: pnpm --filter client build

      - name: Start server
        run: pnpm --filter client preview &

      - name: Wait for server
        run: npx wait-on http://127.0.0.1:4173 --timeout 30000

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('client/package.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: pnpm --filter client test:e2e:install:ci

      - name: Run Playwright tests
        run: pnpm --filter client test:e2e:visual

      - name: Create lost-pixel directory if it doesn't exist
        run: mkdir -p client/lost-pixel

      - name: Copy Lost Pixel config to root
        run: cp client/lostpixel.config.ts ./lostpixel.config.ts

      - name: Lost Pixel
        uses: lost-pixel/lost-pixel@v3.22.0
        env:
          LOST_PIXEL_API_KEY: ${{ secrets.LOST_PIXEL_API_KEY }}
